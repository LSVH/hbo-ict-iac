
package practical1;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.7-b01
 * Generated source version: 2.2
 */
@WebServiceClient(name = "NormallyDistributedService", targetNamespace = "http://lsvh.org/NormallyDistributed/", wsdlLocation = "file:/home/owner/Documents/Education/HBO/IAC/web/WEB-INF/wsdl/p1/NormallyDistributed.wsdl")
public class NormallyDistributedService
        extends Service {

    private final static URL NORMALLYDISTRIBUTEDSERVICE_WSDL_LOCATION;
    private final static WebServiceException NORMALLYDISTRIBUTEDSERVICE_EXCEPTION;
    private final static QName NORMALLYDISTRIBUTEDSERVICE_QNAME = new QName("http://lsvh.org/NormallyDistributed/", "NormallyDistributedService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/home/owner/Documents/Education/HBO/IAC/web/WEB-INF/wsdl/p1/NormallyDistributed.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        NORMALLYDISTRIBUTEDSERVICE_WSDL_LOCATION = url;
        NORMALLYDISTRIBUTEDSERVICE_EXCEPTION = e;
    }

    public NormallyDistributedService() {
        super(__getWsdlLocation(), NORMALLYDISTRIBUTEDSERVICE_QNAME);
    }

    public NormallyDistributedService(WebServiceFeature... features) {
        super(__getWsdlLocation(), NORMALLYDISTRIBUTEDSERVICE_QNAME, features);
    }

    public NormallyDistributedService(URL wsdlLocation) {
        super(wsdlLocation, NORMALLYDISTRIBUTEDSERVICE_QNAME);
    }

    public NormallyDistributedService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, NORMALLYDISTRIBUTEDSERVICE_QNAME, features);
    }

    public NormallyDistributedService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public NormallyDistributedService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    private static URL __getWsdlLocation() {
        if (NORMALLYDISTRIBUTEDSERVICE_EXCEPTION != null) {
            throw NORMALLYDISTRIBUTEDSERVICE_EXCEPTION;
        }
        return NORMALLYDISTRIBUTEDSERVICE_WSDL_LOCATION;
    }

    /**
     * @return returns NormallyDistributed
     */
    @WebEndpoint(name = "NormallyDistributedPort")
    public NormallyDistributed getNormallyDistributedPort() {
        return super.getPort(new QName("http://lsvh.org/NormallyDistributed/", "NormallyDistributedPort"), NormallyDistributed.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns NormallyDistributed
     */
    @WebEndpoint(name = "NormallyDistributedPort")
    public NormallyDistributed getNormallyDistributedPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://lsvh.org/NormallyDistributed/", "NormallyDistributedPort"), NormallyDistributed.class, features);
    }

}
